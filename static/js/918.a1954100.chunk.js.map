{"version":3,"file":"static/js/918.a1954100.chunk.js","mappings":"uSAEaA,EAAYC,EAAAA,GAAAA,QAAH,0CAITC,EAAQD,EAAAA,GAAAA,IAAH,gFAOLE,EAAYF,EAAAA,GAAAA,IAAH,4E,GAQHA,EAAAA,GAAAA,IAAH,2C,QClBHG,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAExBC,EAOED,EAPFC,YACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,SACAC,EACEP,EADFO,OAGF,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,UACGI,GACC,gBACEO,IAAG,0CAAqCP,GACxCQ,IAAI,YAGN,uCAGJ,UAACX,EAAD,YACE,0BACGI,GAASC,EACTC,IAAgB,gCAAQA,EAAaM,MAAM,EAAG,GAA9B,WAEnB,wCAAgBC,KAAKC,MAAsB,IAAfP,EAAsB,IAAlD,QACA,sCACA,uBAAIC,IAEHC,IACC,iCACE,oCACA,wBACGP,EAAUO,OAAOM,KAAI,SAAAC,GAAK,OACzB,wBAAoBA,EAAMX,MAAjBW,EAAMC,mB,oBCrClBC,GAASpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,4OCKNsB,EAAgB,WAAO,IAAD,QACzBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOrB,EAAP,KAAkBsB,EAAlB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEL,GAAa,GADf,mBAIuBM,EAAAA,EAAAA,IAAaX,GAJpC,OAIUY,EAJV,OAKIT,EAAaS,GALjB,gDAOIL,EAAS,EAAD,IAPZ,yBASIF,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadQ,KACC,CAACb,KAGF,4BACGM,IAAS,0DAAkCA,EAAMQ,WACjDV,IAAa,SAACW,EAAA,EAAD,KACd,UAAClB,EAAD,CAAQmB,GAAE,iBAAER,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAArC,WACE,SAAC,MAAD,IADF,cAIEZ,IAAS,SAAC1B,EAAD,CAAWC,UAAWA,KACjC,mBACA,0BACE,2BACE,mDACA,yBACE,SAAC,KAAD,CAASmC,GAAI,OAAQC,MAAO,CAAEC,KAAI,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,MAArD,qBAIF,yBACE,SAAC,KAAD,CAASF,GAAI,UAAWC,MAAO,CAAEC,KAAI,OAAEV,QAAF,IAAEA,GAAF,UAAEA,EAAUS,aAAZ,aAAE,EAAiBC,MAAxD,6BAMN,SAAC,KAAD","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","pages/MovieItemPage/MovieItemPage.styled.jsx","pages/MovieItemPage/MovieItemPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCard = styled.section`\n  display: flex;\n`;\n\nexport const Image = styled.div`\n  margin-right: 30px;\n  img {\n    width: 300px;\n  }\n`;\n\nexport const Container = styled.div`\n  h1,\n  h2,\n  p {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: block;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCard, Image, Container } from './MovieItem.styled';\n\nexport const MovieItem = ({ movieItem }) => {\n  const {\n    poster_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieItem;\n\n  return (\n    <MovieCard>\n      <Image>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt=\"poster\"\n          />\n        ) : (\n          <p>No image</p>\n        )}\n      </Image>\n      <Container>\n        <h1>\n          {title || name}\n          {release_date && <span>({release_date.slice(0, 4)})</span>}\n        </h1>\n        <p>User score: {Math.round((vote_average * 100) / 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n\n        {genres && (\n          <>\n            <h3>Genres</h3>\n            <ul>\n              {movieItem.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </Container>\n    </MovieCard>\n  );\n};\n\nMovieItem.propTypes = {\n  movieItem: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  background-color: #fff;\n  color: black;\n  border: 1px solid #e7e7e7;\n  border-radius: 4px;\n  padding: 5px 10px;\n  text-align: center;\n  display: inline-block;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../../services/themoviedbAPI';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport Loader from '../../components/Loader/Loader';\nimport { FiCornerUpLeft } from 'react-icons/fi';\nimport { Button } from './MovieItemPage.styled';\n\nexport const MovieItemPage = () => {\n  const { movieId } = useParams();\n  const [movieItem, setMovieItem] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovieItem() {\n      setIsLoading(true);\n\n      try {\n        const data = await getMovieById(movieId);\n        setMovieItem(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieItem();\n  }, [movieId]);\n\n  return (\n    <main>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      {isLoading && <Loader />}\n      <Button to={location?.state?.from ?? '/'}>\n        <FiCornerUpLeft />\n        Go back\n      </Button>\n      {!error && <MovieItem movieItem={movieItem} />}\n      <br />\n      <div>\n        <ul>\n          <h4>Iditional information</h4>\n          <li>\n            <NavLink to={'cast'} state={{ from: location?.state?.from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={'reviews'} state={{ from: location?.state?.from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </main>\n  );\n};\n"],"names":["MovieCard","styled","Image","Container","MovieItem","movieItem","poster_path","title","name","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","genre","id","Button","Link","MovieItemPage","movieId","useParams","useState","setMovieItem","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","getMovieById","data","fetchMovieItem","message","Loader","to","state","from"],"sourceRoot":""}