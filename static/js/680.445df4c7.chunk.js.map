{"version":3,"file":"static/js/680.445df4c7.chunk.js","mappings":"6LAGaA,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClC,OACE,wBACGD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMP,GAA1C,SACGG,GAASC,KAFLF,U,sKCDJM,EAAW,WACtB,IAAMR,GAAWS,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAIuBI,EAAAA,EAAAA,MAJvB,OAIUC,EAJV,OAKIP,EAASO,EAAKC,SALlB,gDAOIJ,EAAS,EAAD,IAPZ,yBASIF,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadO,KACC,KAGD,4BACGN,IAAS,0DAAkCA,KAC3CF,IAAa,SAAC,IAAD,KACd,4CACEE,IAAS,SAAC,IAAD,CAAYf,MAAOA,EAAOC,SAAUA","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ items, location }) => {\n  return (\n    <ul>\n      {items.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  location: PropTypes.object,\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getPopularMovies } from '../../services/themoviedbAPI';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport Loader from '../../components/Loader/Loader';\n\nexport const HomePage = () => {\n  const location = useLocation();\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchItems() {\n      setIsLoading(true);\n\n      try {\n        const data = await getPopularMovies();\n        setItems(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchItems();\n  }, []);\n\n  return (\n    <main>\n      {error && <p>Whoops, something went wrong: {error}</p>}\n      {isLoading && <Loader />}\n      <h1>Trending today</h1>\n      {!error && <MoviesList items={items} location={location} />}\n    </main>\n  );\n};\n"],"names":["MoviesList","items","location","map","id","title","name","to","state","from","HomePage","useLocation","useState","setItems","isLoading","setIsLoading","error","setError","useEffect","getPopularMovies","data","results","fetchItems"],"sourceRoot":""}